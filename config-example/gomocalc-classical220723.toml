[requirement]
# specify the minimal version of rapfi this config suits to
min_version = [0,41,1]

[general]
# Reload config file on each move
reload_config_each_move = false

# Clear TT after config is loaded
clear_hash_after_config_loaded = false

# Default thread number if not specified (0 means use all hardware concurrency)
default_thread_num = 1

# Output message mode (Options are [normal, brief, ucilike, none])
message_mode = "normal"

# Coordinate convertion mode (Options are [none, X_flipY, flipY_X])
# For Piskvork, choose "none".
# For Yixin-Board GUI, choose "flipY_X".
coord_conversion_mode = "X_flipY"

# Default candidate range (Options are [square2, square2_line3, square3, square3_line4, square4, full_board])
default_candidate_range = "square3_line4"

# Memory reserved for stuff other than hash table in max_memory option
memory_reserved_mb = 0

# Default transposition table size in KB
default_tt_size_kb = 32768


[model]
binary_file = "model220723.bin"


[search]
# Whether to enable aspiration window
aspiration_window = true

# Number of iterations after we found a mate
num_iteration_after_mate = 24

# Number of iterations after we found only one non-losing move at root
num_iteration_after_singular_root = 24

# Max depth to search (in range [2,200])
max_search_depth = 99


[search.timectl]
# Number of moves spared for the rest of game
match_space = 21.0

# Minimum number of moves spared for the rest of game
match_space_min = 7.0

# Average branch factor to whether next depth has enough time
average_branch_factor = 1.7

# Exit search if turn time is used more than this ratio (even given ample match time)
advanced_stop_ratio = 0.75

# Plan time management at most this many moves ahead
move_horizon = 64



[database]
# Automatic enable the database
# 自动开启数据库
enable_by_default = false

# Database type (Options are [yixindb])
# 数据库类型
type = "yixindb"

# Database path
# 数据库默认路径
url = "rapfi.db"

[database.yixindb]
# Save using the compressed format
# 数据库是否采用压缩格式保存 (非压缩格式下保存的数据库可以使用Yixin打开)
compressed_save = true

# Automatic save the database when closing
# 数据库关闭时是否保存
save_on_close = true

# Number of backup files kept when saving
# 数据库保存时保留备份的个数
num_backups_on_save = 2

# Ignore corrupted database record when loading database file
# 允许读取部分损坏的数据库
ignore_corrupted = true

[database.search]
# Whether to write/update the database in search
# 开启数据库只读模式
readonly_mode = false


# Search before this ply is required to query the database
# 数据库最少查询层数
query_ply = 3

# How many iteration needed to increase one database query ply
# 主要分支下数据库查询层数增加相隔搜索深度
pv_iter_per_ply_increment = 1

# How many iteration needed to increase one database query ply
# 非主要分支下数据库查询层数增加相隔搜索深度
nonpv_iter_per_ply_increment = 2


# PV node before this ply is required to write the database
# 主要分支下数据库最大写入层数，默认为0，增大该层数可以保留更多层主要路线下的胜率结果
pv_write_ply = 0

# How many depth needed to add a new record in PV node
# 主要分支下数据库允许写入的最低搜索深度，默认为25
pv_write_min_depth = 25

# The range of value allowed to write in PV/NonPV node
# 主要分支/非主要分支下数据库允许写入的最大分数范围，默认为800
write_value_range = 800


# Mate node before this ply is required to write the database
# 必胜必败分支下数据库最大写入层数，默认为2，增大该层数可以保留更多层的必胜必败结果
mate_write_ply = 2

# How many depth needed to add a new record in exact Mate node
# 准确步数的必胜必败分支下数据库允许写入的最低搜索深度，默认为0
mate_write_min_depth_exact = 0

# How many depth needed to add a new record in non-exact Mate node
# 没有得到准确步数的必胜必败分支下数据库允许写入的最低搜索深度，默认为0
mate_write_min_depth_nonexact = 0

# For mate longer than this step, we will try to write the record
# 必胜必败下数据库允许写入的最低必胜必败步数，默认为0，少于该步数的必胜必败将不会被记录
mate_write_min_step = 0



# For record found less then this ply, it will try to overwrite it with exact record
# 准确分值允许覆盖数据库的层数，默认为100
exact_overwrite_ply = 100

# For record found less then this ply, it will try to overwrite it with non-exact record
# 非准确分值允许覆盖数据库的层数，默认为0
nonexact_overwrite_ply = 0

# The overwrite rule to write the database
# Options are [better_value_depth_bound, better_depth_bound, better_value, better_label, always, disabled].
# 数据库覆盖模式，默认为"better_value_depth_bound"
overwrite_rule = "better_value_depth_bound"

# The bias added to the exact bound when comparing
# 数据库覆盖时准确分值的深度偏移量，默认为4
overwrite_exact_bias = 4

# The bias added to the old depth bound when comparing
# 数据库覆盖时非准确分值的深度偏移量，默认为-1
overwrite_depth_bound_bias = -1

# The bias added to the queried depth bound when comparing
# 数据库读取时读取结果的深度偏移量，默认为0
query_result_depth_bound_bias = 0


[database.libfile]

# Mapping of marks in library file
# Lib文件标记映射
black_win_mark = "a"
white_win_mark = "c"
black_lose_mark = "c"
white_lose_mark = "a"

# Ignore all comments in imported library file
# 是否忽略导入的Lib文件中的注释
ignore_comment = false
